name: Production Scv Worker pipelines

on:
  push:
    branches:
      - main
    
env:
  ENV: "prd"
  APP: "scv-worker-testnet"

concurrency: testnet_scv_production_environment

jobs:
  main:
    runs-on: ubuntu-latest
    name: Production Pipeline Scv Worker
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Get tags
        run: git fetch --tags origin

      - name: Get latest release tag
        shell: bash
        id: release_tag
        run: echo TAG=$(git describe --tags HEAD --abbrev=0) >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        # Only worked for us with this option on
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-${{ env.ENV }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.ENV }}-buildx

      - name: Log in to dockerhub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Extract metadata for docker
        if: github.event_name == 'push'
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: aeternity/smart-contract-verifier-worker
          tags: |
            type=raw,value=${{ steps.release_tag.outputs.TAG }}
      
      - name: Build and push docker image
        if: github.event_name == 'push'
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ./apps/scv-worker/dev/Dockerfile
          push: true
          target: prod
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        if: github.event_name == 'push'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - uses: actions/checkout@v3
        with:
          repository: aeternity/gitops-apps-aelabs.git
          ref: prd
          token: ${{ secrets.BOT_GITHUB_TOKEN }}
          persist-credentials: false
          fetch-depth: 0

      - name: Production Deploy
        uses: aeternity/ae-github-actions/argocd-deploy@v4
        with:
          git-sha: ${{ steps.git-sha.outputs.GIT_SHA }}
          url-prefix: ${{ steps.release_tag.outputs.TAG }}
          env: ${{ env.ENV }}
          app: ${{ env.APP }}

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          repository: aeternity/gitops-apps-aelabs
          github_token: ${{ secrets.BOT_GITHUB_TOKEN }}
          branch: prd
